{"version":3,"sources":["scss\\base\\_font-face.scss","scss\\abstracts\\_animations.scss","scss\\base\\_root.scss","scss\\abstracts\\_mixins.scss","scss\\base\\_reset.scss","scss\\base\\_typography.scss","scss\\base\\_base.scss","scss\\utilities\\_color-utilities.scss","scss\\abstracts\\_colors.scss","scss\\utilities\\_sr-only.scss","scss\\components\\_card.scss","scss\\components\\_social-link.scss","scss\\components\\_icon.scss","scss\\layouts\\_about.scss","scss\\layouts\\_background.scss"],"names":[],"mappings":"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","file":"style.a6dae8f7.css","sourceRoot":"..\\src","sourcesContent":["// Import Josefin Sans & Roboto from Google Fonts\r\n@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans&family=Roboto&family=Raleway&display=swap');","@use \"sass:string\";\r\n@use \"colors\" as *;\r\n\r\n@keyframes fade-in-out {\r\n    0% { opacity: 0; z-index: 5; }\r\n    45% { opacity: 0; z-index: 5; }\r\n    50% { opacity: 1; z-index: 6; }\r\n    95% { opacity: 1; z-index: 6; }\r\n    100% { opacity: 0; z-index: 5; }\r\n}","@use '../abstracts/' as *;\r\n\r\n:root {\r\n    // Fonts\r\n    --main-font: 'Raleway', sans-serif;\r\n    --header-font: 'Josefin Sans', sans-serif;\r\n\r\n    // Set section spacing\r\n    --section-spacing: 3.5rem;\r\n    @include min-screen(medium) {\r\n        --section-spacing: 7rem;\r\n    }\r\n\r\n    // Set colors from map\r\n    @each $color, $shades in $colors {\r\n        @each $shade, $value in $shades {\r\n            --#{$color}-#{$shade}: #{$value};\r\n        }\r\n    }\r\n\r\n    // set font size from map & screen-size\r\n    @each $screen-size, $font-sizes in $type-scale {\r\n        @if $screen-size == small {\r\n            @each $fs, $value in $font-sizes {\r\n                --fs-#{$fs}: #{$value};\r\n            }\r\n        }\r\n        @else {\r\n            @include min-screen(small) {\r\n                @each $fs, $value in $font-sizes {\r\n                    --fs-#{$fs}: #{$value};\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","@use \"breakpoints\" as *;\r\n\r\n@mixin min-screen($key) {\r\n    $min-width: map-get($breakpoints, $key);\r\n    @if $min-width == null {\r\n        $min-width: $key;\r\n    }\r\n\r\n    @media only screen and (min-width: $min-width) {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin triangle($color: black, $width: 200px, $height: 200px, $direction: bottom right) {\r\n    width: #{$width};\r\n    height: #{$height};\r\n    background: linear-gradient(\r\n    to #{$direction}, #0000 0%, #0000 50%, #{$color} 50%, #{$color} 100%);\r\n}\r\n\r\n@mixin circle($color: black, $width: 200px, $height: null) {\r\n    width: $width;\r\n    height: if($height == null, $width, $height);\r\n    background-color: $color;\r\n    border-radius: 50%;\r\n}\r\n\r\n@mixin hide-scrollbars {\r\n    -ms-overflow-style: none; // IE, Edge\r\n    scrollbar-width: none; // Firefox\r\n    ::-webkit-scrollbar { display: none; } // Chrome, Safari, Opera\r\n}","/* Box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nfigure,\r\nblockquote,\r\ndl,\r\ndd {\r\n  margin: 0;\r\n}\r\n\r\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\r\nul[role='list'],\r\nol[role='list'] {\r\n  list-style: none;\r\n}\r\n\r\n/* Set core root defaults */\r\nhtml:focus-within {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n/* Set core body defaults */\r\nbody {\r\n  min-height: 100vh;\r\n  text-rendering: optimizeSpeed;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* A elements that don't have a class get default styles */\r\na:not([class]) {\r\n  text-decoration-skip-ink: auto;\r\n}\r\n\r\n/* Make images easier to work with */\r\nimg,\r\npicture {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n/* Inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\r\n@media (prefers-reduced-motion: reduce) {\r\n  html:focus-within {\r\n   scroll-behavior: auto;\r\n  }\r\n  \r\n  *,\r\n  *::before,\r\n  *::after {\r\n    animation-duration: 0.01ms !important;\r\n    animation-iteration-count: 1 !important;\r\n    transition-duration: 0.01ms !important;\r\n    scroll-behavior: auto !important;\r\n  }\r\n}\r\n","@use \"abstracts\" as *;\r\n\r\n* {\r\n    // this is a bad idea, but works for now\r\n    font-variation-settings: \"wght\" var(--font-weight, 375), \"wdth\" var(--font-width, 80);\r\n}\r\n\r\nbody {\r\n    font-size: var(--fs-400);\r\n    font-family: var(--main-font);\r\n    color: var(--neutral-90);\r\n    letter-spacing: -0.5px;\r\n    \r\n    ::selection {\r\n        background: col(30);\r\n    }\r\n}\r\n\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4 {\r\n    --font-weight: 700;\r\n    --font-width: 80;\r\n    font-weight: normal;\r\n    font-stretch: 100%;\r\n    line-height: 1.2;\r\n    font-family: var(--header-font);\r\n    color: col(80);\r\n\r\n    &::selection {\r\n        color: col(90);\r\n        background: col(30);\r\n    }\r\n}\r\n\r\nh1 {\r\n    --font-weight: 900;\r\n    color: col(40);\r\n    \r\n    &::selection {\r\n        color: col(80);\r\n        background: col(30);\r\n    }\r\n}\r\n\r\n// This is setting the font-sizes\r\n// based on the ones in the abstract\r\n// folder, go there to make updates\r\n\r\nsmall,\r\n.text-small {\r\n    font-size: var(--fs-300);\r\n}\r\n\r\nb {\r\n    letter-spacing: .12rem;\r\n    font-weight: bolder;\r\n}\r\nstrong {\r\n    --font-weight: 500;\r\n    font-weight: normal;\r\n}\r\n\r\na {\r\n    color: col(40);\r\n    &::selection {\r\n        color: col(80);\r\n        background: col(30);\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n        color: col(30);\r\n        text-decoration: none;\r\n    }\r\n}\r\n\r\ninput {\r\n    &:hover, &:focus {\r\n        outline: none;\r\n        box-shadow: col(20) 0 0 .5rem .5rem;\r\n    }\r\n}\r\n\r\np:not([class]),\r\nul:not([class]),\r\nli:not([class]) {\r\n    max-width: 60ch;\r\n}\r\n\r\nhr {\r\n    color: col(80);\r\n    width: 100%;\r\n    margin: 1.25rem auto;\r\n}\r\n","@use \"abstracts\" as *;\r\n\r\nhtml {\r\n    @include hide-scrollbars;\r\n    scroll-behavior: smooth;\r\n}\r\n\r\nbody {\r\n    overflow-x: hidden;\r\n    // Background: <repeat-style> <position> / <size> <color (if gradient isn't supported)> <image>\r\n    background: no-repeat 0 50vw / 100% calc(100% - 50vw) black linear-gradient(black, col(30));\r\n    display: flex;\r\n    flex-direction: column;\r\n}","@use 'sass:string';\r\n@use 'abstracts' as *;\r\n\r\n// Add color classes\r\n@each $color, $shades in $colors {\r\n    .#{$color} {\r\n        @each $shade, $value in $shades {\r\n            --col-#{$shade}: var(--#{$color}-#{$shade});\r\n        }\r\n    }\r\n}\r\n\r\n// Add shade classes\r\n@each $shade in $shades {\r\n    // Remove % from lightness value\r\n    $shade: string.slice('#{$shade}', 1, -2);\r\n\r\n    // Apply color to text or background\r\n    .txt-col-#{$shade} { color: col($shade) !important; }\r\n    .bg-col-#{$shade} { background-color: col($shade) !important; }\r\n}\r\n\r\n@each $color, $value in $pride-flag {\r\n    .pride-flag-#{$color} { background-color: $value; }\r\n}","@use \"sass:map\";\r\n@use \"sass:string\";\r\n@use \"sass:color\";\r\n\r\n$colors: (\r\n    neutral: hsl(0, 0%, 40%),\r\n    primary: hsl(34, 100%, 40%),\r\n    pride-A: hsl(357, 100%, 50%),\r\n    pride-B: hsl(32, 100%, 56%),\r\n    pride-C: hsl(51, 100%, 50%),\r\n    pride-D: hsl(118, 100%, 33%),\r\n    pride-E: hsl(258, 100%, 30%),\r\n    pride-F: hsl(315, 100%, 27%),\r\n\r\n    card1: hsl(167, 100%, 40%),\r\n    card2: hsl(202, 100%, 40%),\r\n    card3: hsl(192, 100%, 40%),\r\n);\r\n\r\n$shades: (5%, 10%, 15%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%);\r\n\r\n// Add all shades to color map\r\n@each $color, $value in $colors {\r\n    @each $shade in $shades {\r\n        // Apply lightness to color\r\n        $new-value: color.change($value, $lightness: $shade);\r\n        // Remove % from lightness value\r\n        $shade: string.slice(\"#{$shade}\", 1, -2);\r\n        // Set $colors/COLOR/SHADE to NEW-VALUE (e.g. $colors/primary/40 to hsl(66, 100%, 40%))\r\n        $colors: map.set($colors, $color, $shade, $new-value);\r\n    }\r\n}\r\n\r\n$pride-flag: (\r\n    1: hsl(357, 100%, 50%),\r\n    2: hsl(32, 100%, 56%),\r\n    3: hsl(51, 100%, 50%),\r\n    4: hsl(118, 100%, 33%),\r\n    5: hsl(258, 100%, 30%),\r\n    6: hsl(315, 100%, 27%),\r\n);\r\n\r\n//* Original Pride Colors: #ff1e26, #fe941e, #ffff00, #06bd00, #001a98, #760088",".sr-only {\r\n    border: 0 !important;\r\n    clip: rect(1px, 1px, 1px, 1px) !important;\r\n    -webkit-clip-path: inset(50%) !important;\r\n    clip-path: inset(50%) !important;\r\n    height: 1px !important;\r\n    margin: -1px !important;\r\n    overflow: hidden !important;\r\n    padding: 0 !important;\r\n    position: absolute !important;\r\n    width: 1px !important;\r\n    white-space: nowrap !important;\r\n}\r\n\r\n.screenreader-text {\r\n    position: absolute;\r\n    left: -999px;\r\n    width: 1px;\r\n    height: 1px;\r\n    top: auto;\r\n\r\n    &:focus {\r\n        display: inline-block;\r\n        height: auto;\r\n        width: auto;\r\n        position: static;\r\n        margin: auto;\r\n    }\r\n}\r\n","@use 'abstracts' as *;\r\n\r\n.card {\r\n    contain: layout inline-size;\r\n    width: 100%;\r\n    box-shadow: -.15em .15em 0em .15em col(5);\r\n    border-radius: 1.25rem;\r\n\r\n    padding: 0.75rem;\r\n    margin: 0.75rem;\r\n    max-width: min(30rem, 90vw);\r\n\r\n    background-color: col(10);\r\n\r\n    &-container {\r\n        gap: 1rem;\r\n        display: flex;\r\n        justify-content: center;\r\n        \r\n        flex-wrap: wrap;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        @include min-screen(medium) {\r\n            flex-direction: row;\r\n            align-items: stretch;\r\n        }\r\n    }\r\n}","@use \"abstracts\" as *;\r\n\r\n.socials {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-items: center;\r\n    justify-content: center;\r\n    align-self: center;\r\n    margin: 2vh 0;\r\n    padding: 0 2rem;\r\n\r\n    //background: no-repeat 2rem 2rem col(10);\r\n}\r\n\r\n.social-link {\r\n    // Draw Circle\r\n    $diameter: 4rem;\r\n    @include circle(col(40), #{$diameter});\r\n    box-shadow: col(20) 0 0 .3rem .2rem;\r\n    opacity: 0.75;\r\n\r\n    margin: 0.5rem;\r\n    padding: 0.75rem;\r\n    border: none;\r\n\r\n    &:hover, &:focus {\r\n        @include circle(col(50), #{$diameter});\r\n        outline: none;\r\n        box-shadow: col(20) 0 0 .5rem .5rem;\r\n        fill: white;\r\n    }\r\n\r\n    * {\r\n        background-color: col(10);\r\n    }\r\n}","$icons: (\"discord\", \"github\", \"instagram\", \"itchdotio\", \"twitter\");\r\n\r\n@each $icon in $icons {\r\n    .icon-#{$icon} {\r\n        mask-image: url(\"https://simpleicons.org/icons/#{$icon}.svg\");\r\n\r\n        margin: 0;\r\n        height: 100%;\r\n        width: 100%;\r\n\r\n        -webkit-mask-size: contain;\r\n        mask-size: contain;\r\n        -webkit-mask-position: center;\r\n        mask-position: center;\r\n        -webkit-mask-repeat: no-repeat;\r\n        mask-repeat: no-repeat;\r\n    }\r\n}\r\n","@use 'abstracts' as *;\r\n\r\n#about {\r\n    $diameter: 65vh;\r\n\r\n    // Center circle even when it's wider than the screen \r\n    --diameter: #{$diameter};\r\n    left: calc((100vw - var(--diameter)) / 2);\r\n    @include min-screen(#{$diameter}) {\r\n        left: auto;\r\n    }\r\n\r\n    // Draw circle\r\n    @include circle(col(10), var(--diameter));\r\n    margin: 20vh auto 5vh auto;\r\n    box-shadow: col(5) 1px 1px 2px 2px;\r\n    position: relative;\r\n\r\n    > div {\r\n        animation-name: fade-in-out;\r\n        animation-duration: 12s;\r\n        animation-iteration-count: infinite;\r\n\r\n        position: absolute;\r\n\r\n        top: 1rem; \r\n        bottom: 1rem;\r\n        right: 1rem;\r\n        left: 1rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-self: center;\r\n        align-items: center;\r\n        text-align: center;\r\n    }\r\n\r\n    #en-tp {\r\n        animation-delay: 6s;\r\n    }\r\n}","@use \"sass:math\";\r\n@use \"abstracts\" as *;\r\n\r\n#queer-anarchism-flag {\r\n    z-index: -5;\r\n    position: absolute;\r\n\r\n    div {\r\n        width: 100vw;\r\n        height: math.div(50vw, 6);\r\n    }\r\n\r\n    .triangle {\r\n        position: absolute;\r\n        top: 0;\r\n        @include triangle(black, 100vw, 50vw, bottom right);\r\n    }\r\n}"]}